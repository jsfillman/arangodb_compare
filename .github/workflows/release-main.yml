name: Release - Build & Push Image

on:
  release:
    types: [published]

jobs:
  check-source-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Validate Source Branch
        if: startsWith(github.event.release.target_commitish, 'refs/heads/')
        run: |
          if [[ "${{ github.event.release.target_commitish }}" != "main" && "${{ github.event.release.target_commitish }}" != "master" ]]; then
            echo "Invalid release branch: ${{ github.event.release.target_commitish }}"
            exit 1
          fi

  validate-release-tag:
    needs: check-source-branch
    runs-on: ubuntu-latest
    steps:
      - name: Validate Release Tag
        run: |
          if [[ ! "${{ github.event.release.tag_name }}" =~ ^v[0-9]+(\.[0-9]+)*$ ]]; then
            echo "Invalid release tag: ${{ github.event.release.tag_name }}"
            exit 1
          fi

  build-push:
    needs: validate-release-tag
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Create GitHub action tags from image tags
        id: tags
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const tags = ['${{ github.event.release.tag_name }}', 'latest'];
            const username = '${{ github.repository_owner }}';
            const repoName = '${{ github.event.repository.name }}';
            return tags.map((tag) => {
              return `ghcr.io/${username}/${repoName}:${tag}`;
            }).join(',');

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            BRANCH='${{ github.ref }}'
            TAG='${{ github.ref }}'
          tags: ${{ steps.tags.outputs.result }}

      - name: Run tests and generate coverage report
        run: |
          # Install dependencies and run tests to generate coverage report
          pip install -r requirements.txt
          pytest --cov=arango_compare --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

