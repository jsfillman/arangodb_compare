name: Pull Request Build, Tag, & Push

on:
  pull_request:
    branches:
      - develop
      - main
      - master
    types:
      - opened
      - reopened
      - synchronize
      - closed

jobs:
  build-develop-open:
    if: github.base_ref == 'develop' && github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64/v8 -t ${{ github.repository }}:pr-${{ github.event.number }} .

  build-develop-merge:
    if: github.base_ref == 'develop' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Create GitHub action tags from image tags
        id: tags
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const tags = ['pr-${{ github.event.number }}', 'latest'];
            const username = '${{ github.repository_owner }}';
            const repoName = '${{ github.event.repository.name }}-develop';
            return tags.map((tag) => {
              return `ghcr.io/${username}/${repoName}:${tag}`;
            }).join(',');

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            BRANCH='${{ github.ref }}'
            TAG='${{ github.ref }}'
          tags: ${{ steps.tags.outputs.result }}

  build-main-open:
    if: (github.base_ref == 'main' || github.base_ref == 'master') && github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64/v8 -t ${{ github.repository }}:pr-${{ github.event.number }} .

  build-main-merge:
    if: (github.base_ref == 'main' || github.base_ref == 'master') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Create GitHub action tags from image tags
        id: tags
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const tags = ['pr-${{ github.event.number }}', 'latest-rc'];
            const username = '${{ github.repository_owner }}';
            const repoName = '${{ github.event.repository.name }}';
            return tags.map((tag) => {
              return `ghcr.io/${username}/${repoName}:${tag}`;
            }).join(',');

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            BRANCH='${{ github.ref }}'
            TAG='${{ github.ref }}'
          tags: ${{ steps.tags.outputs.result }}

